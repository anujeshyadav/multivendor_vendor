{"version":3,"sources":["views/apps/freshlist/customer/AddCustomer.js","axiosConfig.js"],"names":["AddCategory","props","onChangeHandler","event","setState","selectedFile","target","files","selectedName","name","console","log","changeHandler1","e","status","value","changeHandler","submitHandler","preventDefault","data","FormData","append","state","customer_name","desc","values","axiosConfig","post","then","response","history","push","catch","error","image","className","col-sm-6","onClick","onSubmit","this","lg","md","type","placeholder","onChange","for","id","style","paddingLeft","paddingRight","margin","height","backgroundColor","borderRadius","border","phone","email","address","city","check","Ripple","color","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/289.d46d2e35.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionItemButton,\r\n  AccordionItemPanel,\r\n} from \"react-accessible-accordion\";\r\nimport { FiArrowDown } from \"react-icons/fi\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\n\r\nexport class AddCategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customer_name: \"\",\r\n      selectedFile: null,\r\n      selectedName: \"\",\r\n      desc: \"\",\r\n      image: \"\",\r\n      status: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n    this.setState({ selectedName: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"customer_name\", this.state.customer_name);\r\n    data.append(\"desc\", this.state.desc);\r\n    data.append(\"status\", this.state.status);\r\n    if (this.state.selectedFile !== null) {\r\n      data.append(\"image\", this.state.selectedFile, this.state.selectedName);\r\n    }\r\n    for (var value of data.values()) {\r\n      console.log(value);\r\n    }\r\n    axiosConfig\r\n      .post(\"/admin/addcategory\", data)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/app/freshlist/category/categoryList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Customer\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\" btn btn-danger float-right\"\r\n                onClick={() =>\r\n                  history.push(\"/app/freshlist/customer/CustomerList\")\r\n                }\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Customer Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Customer Name\"\r\n                      name=\"customer_name\"\r\n                      value={this.state.customer_name}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Email</Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"exampleEmail\"\r\n                      placeholder=\"Email\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label for=\"examplePassword\">Password</Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"examplePassword\"\r\n                      placeholder=\"password\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label for=\"ConfirmPassword\">Confirm Password</Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"ConfirmPassword\"\r\n                      placeholder=\"Confirm password\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Description</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Here\"\r\n                      name=\"desc\"\r\n                      value={this.state.desc}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Mobile Number</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"desc\"\r\n                      placeholder=\"Enter Number\"\r\n                      value={this.state.desc}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Customer Image </Label>\r\n                    <CustomInput\r\n                      type=\"file\"\r\n                      name=\"image\"\r\n                      value={this.state.image}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Shipping</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"shipping_address\"\r\n                      name=\"shipping_address\"\r\n                      // value={this.state.shipping_address}\r\n                      // onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-2\">\r\n                  <Label>Address</Label>\r\n                  <Accordion>\r\n                    <AccordionItem>\r\n                      <Col lg=\"6\" md=\"6\" className=\"\">\r\n                        <AccordionItemButton\r\n                          style={{\r\n                            paddingLeft: \"424px\",\r\n                            paddingRight: \"40px\",\r\n                            margin: \"3px 0 12px -13px\",\r\n                            height: \"36px\",\r\n                            backgroundColor: \"white\",\r\n                            borderRadius: \"0.5rem\",\r\n                            border: \"1px solid #d9d9d9\",\r\n                          }}\r\n                        >\r\n                          <FiArrowDown />\r\n                        </AccordionItemButton>\r\n                      </Col>\r\n                      <AccordionItemPanel>\r\n                        <Form onSubmit={this.submitHandler}>\r\n                          <FormGroup>\r\n                            <Label>Type</Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name=\"type\"\r\n                              value={this.state.type}\r\n                              onChange={this.changeHandler}\r\n                            >\r\n                              <option>---Select Address---</option>\r\n                              <option value=\"1\">Home</option>\r\n                              <option value=\"2\">Work</option>\r\n                              <option value=\"3\">Others</option>\r\n                            </Input>\r\n                          </FormGroup>\r\n\r\n                          <FormGroup>\r\n                            <Label>Name</Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"name\"\r\n                              value={this.state.name}\r\n                              onChange={this.changeHandler}\r\n                            />\r\n                          </FormGroup>\r\n\r\n                          <FormGroup>\r\n                            <Label>Phone</Label>\r\n                            <Input\r\n                              type=\"number\"\r\n                              name=\"number\"\r\n                              value={this.state.phone}\r\n                              onChange={this.changeHandler}\r\n                            />\r\n                          </FormGroup>\r\n\r\n                          <FormGroup>\r\n                            <Label>Email</Label>\r\n                            <Input\r\n                              type=\"email\"\r\n                              name=\"email\"\r\n                              value={this.state.email}\r\n                              onChange={this.changeHandler}\r\n                            />\r\n                          </FormGroup>\r\n                          <FormGroup>\r\n                            <Label>Address</Label>\r\n                            <Input\r\n                              type=\"address\"\r\n                              name=\"address\"\r\n                              value={this.state.address}\r\n                              onChange={this.changeHandler}\r\n                            />\r\n                          </FormGroup>\r\n\r\n                          <FormGroup>\r\n                            <Label>City</Label>\r\n                            <Input\r\n                              type=\"city\"\r\n                              name=\"city\"\r\n                              value={this.state.city}\r\n                              onChange={this.changeHandler}\r\n                            />\r\n                          </FormGroup>\r\n                          {/* <FormGroup>\r\n                                <Label>Descripition</Label>\r\n                                <Editor\r\n                                  toolbarClassName=\"demo-toolbar-absolute\"\r\n                                  wrapperClassName=\"demo-wrapper\"\r\n                                  editorClassName=\"demo-editor\"\r\n                                  editorState={this.state.editorState}\r\n                                  onEditorStateChange={this.onEditorStateChange}\r\n                                />\r\n                              </FormGroup> */}\r\n                        </Form>\r\n                      </AccordionItemPanel>\r\n                    </AccordionItem>\r\n                  </Accordion>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"ml-0\">\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input type=\"checkbox\" />\r\n                    Check me out\r\n                  </Label>\r\n                </FormGroup>\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                <Button.Ripple\r\n                  color=\"danger\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mb-1\"\r\n                >\r\n                  Add Customer\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddCategory;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://35.154.86.59/api/admin\",\r\n\r\n  baseURL: \"http://35.154.225.110:5000\",\r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}